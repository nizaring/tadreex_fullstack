{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\firas halouani\\\\Desktop\\\\design\\\\tadreex_fullstack\\\\frontend\\\\src\\\\components\\\\client\\\\Company.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { MailIcon, KeyIcon, PhoneIcon, UserCircleIcon, PhotographIcon, ChatIcon } from \"@heroicons/react/solid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Company = () => {\n  _s();\n  const [trainingCourses, setTrainingCourses] = useState([]);\n  useEffect(() => {\n    const fetchTrainingCourses = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:3000/training-courses\");\n        setTrainingCourses(res.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchTrainingCourses();\n  }, []);\n  //traduction\n  const {\n    t\n  } = useTranslation();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    phone: \"\",\n    companyName: \"\",\n    trainingCourse: \"\",\n    message: \"\",\n    image: \"\"\n  });\n  const navigate = useNavigate();\n  const [emailExists, setEmailExists] = useState(false); // add emailExists state\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const emailExistsRes = await axios.get(`http://localhost:3000/api/check-email/${formData.email}`);\n      setEmailExists(emailExistsRes.data); // set emailExists state\n      if (emailExistsRes.data === false) {\n        const formDataWithImage = new FormData();\n        formDataWithImage.append(\"email\", formData.email);\n        formDataWithImage.append(\"password\", formData.password);\n        formDataWithImage.append(\"phone\", formData.phone);\n        formDataWithImage.append(\"companyName\", formData.companyName);\n        formDataWithImage.append(\"trainingCourse\", formData.trainingCourse);\n        formDataWithImage.append(\"message\", formData.message);\n        formDataWithImage.append(\"image\", formData.image);\n        const res = await axios.post(\"http://localhost:3000/submit-company\", formDataWithImage, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        console.log(res.data);\n        navigate(\"/signin\");\n      }\n    } catch (error) {\n      console.error(error);\n      alert(\"Failed to insert data into the database\");\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === \"trainingCourse\") {\n      const selectedCourse = trainingCourses.find(course => course.id_formation === parseInt(value));\n      console.log(selectedCourse.title);\n      setFormData({\n        ...formData,\n        [name]: parseInt(value),\n        trainingCourse: selectedCourse.title\n      });\n    } else {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    }\n  };\n  const handleImageChange = e => {\n    const selectedImage = e.target.files[0];\n    setFormData({\n      ...formData,\n      image: selectedImage\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(Company, \"b8OnQXct6Rguo74ZyS3cCjBLRKI=\", false, function () {\n  return [useTranslation, useNavigate];\n});\n_c = Company;\nexport default Company;\nvar _c;\n$RefreshReg$(_c, \"Company\");","map":{"version":3,"names":["React","useState","axios","useEffect","useNavigate","useTranslation","MailIcon","KeyIcon","PhoneIcon","UserCircleIcon","PhotographIcon","ChatIcon","jsxDEV","_jsxDEV","Company","_s","trainingCourses","setTrainingCourses","fetchTrainingCourses","res","get","data","error","console","t","formData","setFormData","email","password","phone","companyName","trainingCourse","message","image","navigate","emailExists","setEmailExists","handleSubmit","e","preventDefault","emailExistsRes","formDataWithImage","FormData","append","post","headers","log","alert","handleChange","name","value","target","selectedCourse","find","course","id_formation","parseInt","title","handleImageChange","selectedImage","files","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/firas halouani/Desktop/design/tadreex_fullstack/frontend/src/components/client/Company.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport {\r\n  MailIcon,\r\n  KeyIcon,\r\n  PhoneIcon,\r\n  UserCircleIcon,\r\n  PhotographIcon,\r\n  ChatIcon,\r\n} from \"@heroicons/react/solid\";\r\n\r\nconst Company = () => {\r\n  const [trainingCourses, setTrainingCourses] = useState([]);\r\n  useEffect(() => {\r\n    const fetchTrainingCourses = async () => {\r\n      try {\r\n        const res = await axios.get(\"http://localhost:3000/training-courses\");\r\n        setTrainingCourses(res.data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    fetchTrainingCourses();\r\n  }, []);\r\n  //traduction\r\n  const { t } = useTranslation();\r\n  \r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    phone: \"\",\r\n    companyName: \"\",\r\n    trainingCourse: \"\",\r\n    message: \"\",\r\n    image: \"\",\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [emailExists, setEmailExists] = useState(false); // add emailExists state\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const emailExistsRes = await axios.get(`http://localhost:3000/api/check-email/${formData.email}`);\r\n      setEmailExists(emailExistsRes.data); // set emailExists state\r\n      if (emailExistsRes.data === false) {\r\n        const formDataWithImage = new FormData();\r\n        formDataWithImage.append(\"email\", formData.email);\r\n        formDataWithImage.append(\"password\", formData.password);\r\n        formDataWithImage.append(\"phone\", formData.phone);\r\n        formDataWithImage.append(\"companyName\", formData.companyName);\r\n        formDataWithImage.append(\"trainingCourse\", formData.trainingCourse);\r\n        formDataWithImage.append(\"message\", formData.message);\r\n        formDataWithImage.append(\"image\", formData.image);\r\n  \r\n        const res = await axios.post(\r\n          \"http://localhost:3000/submit-company\",\r\n          formDataWithImage,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n          }\r\n        );\r\n        console.log(res.data);\r\n        navigate(\"/signin\");\r\n      } \r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(\"Failed to insert data into the database\");\r\n    }\r\n  };\r\n  \r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === \"trainingCourse\") {\r\n      const selectedCourse = trainingCourses.find(\r\n        (course) => course.id_formation === parseInt(value)\r\n      );\r\n      console.log(selectedCourse.title);\r\n      setFormData({\r\n        ...formData,\r\n        [name]: parseInt(value),\r\n        trainingCourse: selectedCourse.title,\r\n      });\r\n    } else {\r\n      setFormData({\r\n        ...formData,\r\n        [name]: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    const selectedImage = e.target.files[0];\r\n    setFormData({\r\n      ...formData,\r\n      image: selectedImage,\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n    \r\n    </div>\r\n  );\r\n};\r\nexport default Company;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}